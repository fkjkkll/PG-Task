///////////////////////////////////////////////////////////////////////////////////////////
//
//第五章-阈值化
//
///////////////////////////////////////////////////////////////////////////////////////////
#ifndef _RMW_ALG_THRESHOLD_H
#define _RMW_ALG_THRESHOLD_H

///////////////////////////////////////////////////////////////////////////////////////////
//
//直方图
//
///////////////////////////////////////////////////////////////////////////////////////////
void RmwGetHistogram(BYTE *pGryImg, int width, int height, int *histogram);
void RmwGetHistogram( BYTE *pGryImg, int width, 
	                  int height, int x1, int x2, int y1, int y2, 
	                  int *histogram
                    );
void RmwDrawHistogram2Img( int *histogram, int histSize, 
	                       double maxScale,
	                       BYTE *pGryImg, int width, int height
                         );
///////////////////////////////////////////////////////////////////////////////////////////
//
//二值化
//
///////////////////////////////////////////////////////////////////////////////////////////
void RmwThreshold(BYTE *pGryImg, int width, int height, int thre);
void RmwThreshold(BYTE *pGryImg, int width, int height, int thre, BYTE *pBinImg);
void RmwSemiThreshold(BYTE *pGryImg, int width, int height, int thre);
void RmwThreshold(BYTE *pGryImg, int width, int height, int x1, int x2, int y1, int y2, int thre);
///////////////////////////////////////////////////////////////////////////////////////////
//
//Otsu阈值
//
///////////////////////////////////////////////////////////////////////////////////////////
int RmwGetOtsuThreshold(int *histogram, int nSize);
///////////////////////////////////////////////////////////////////////////////////////////
//
//分块阈值
//
///////////////////////////////////////////////////////////////////////////////////////////
void RmwBlockThreshold(BYTE *pGryImg, int width, int height, int nBlockX, int nBlockY);
///////////////////////////////////////////////////////////////////////////////////////////
//
//逐点阈值
//
///////////////////////////////////////////////////////////////////////////////////////////
void RmwPixelThreshold( BYTE *pGryImg, int width, int height, 
	                    int M, int N, //滤波邻域：M列N行
	                    BYTE *pResImg
                      );

#endif

